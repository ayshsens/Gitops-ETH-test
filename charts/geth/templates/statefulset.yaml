apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ .Release.Name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: geth
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: GETH_PORT
              value: "8545"
          args:
            - --holesky
            - --syncmode=snap
            - --http
            - --http.addr=0.0.0.0
            - --http.port=8555
            - --http.api=eth,net,web3,txpool,debug
            - --ws
            - --ws.addr=0.0.0.0
            - --ws.port=8546
            - --authrpc.addr=0.0.0.0
            - --authrpc.port=8551
            - --authrpc.jwtsecret=/secrets/jwt.hex
            - --metrics
            - --metrics.addr=0.0.0.0
            - --metrics.port=6060
            - --bootnodes=enode://d860a01f9722d78051619d1e2351aba3f43f943f6f00718d1b9baa4100932a67f8c1d04a06f1243cababae63b0413492f7dc5b6ab3598e4004c91e24c80ac4b@34.159.55.123:30303,enode://4b5d05e08a0c242b7d9b11b7f2b8305b6a85a5d6c0ff3763a554d147f628733c8f40a0d5c8d6b5a4dcee8b54a4cdf480a53dc6d5b0f3054b0a6b8526dadb1a2@34.159.100.56:30303
          ports:
            - name: http-rpc
              containerPort: {{ .Values.service.rpcPort }}
            - name: ws-rpc
              containerPort: {{ .Values.service.wsPort }}
            - name: metrics
              containerPort: {{ .Values.service.metricsPort }}
            - name: p2p-tcp
              containerPort: 30303
            - name: p2p-udp
              containerPort: 30303
              protocol: UDP
          # readinessProbe:
          #   exec:
          #     command:
          #       - /scripts/check-node-sync.sh
          #   initialDelaySeconds: 60
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          # livenessProbe:
          #   exec:
          #     command:
          #       - /scripts/check-node-health.sh
          #   initialDelaySeconds: 120
          #   periodSeconds: 20
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          volumeMounts:
            - name: data
              mountPath: /root/.ethereum
            - name: health-check-scripts
              mountPath: /scripts
      volumes:
        - name: health-check-scripts
          configMap:
            name: geth-health-check
            defaultMode: 0755  
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}