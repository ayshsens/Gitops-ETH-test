apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ .Release.Name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: geth
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --{{ .Values.network }}
            - --http
            - --http.addr=0.0.0.0
            - --http.port={{ .Values.service.rpcPort }}
            - --http.api=eth,net,web3,txpool,debug
            - --ws
            - --ws.addr=0.0.0.0
            - --ws.port={{ .Values.service.wsPort }}
            - --metrics
            - --metrics.addr=0.0.0.0
            - --metrics.port={{ .Values.service.metricsPort }}
            {{- range .Values.bootNodes }}
            - --bootnodes={{ . }}
            {{- end }}
          ports:
            - name: http-rpc
              containerPort: {{ .Values.service.rpcPort }}
            - name: ws-rpc
              containerPort: {{ .Values.service.wsPort }}
            - name: metrics
              containerPort: {{ .Values.service.metricsPort }}
            - name: p2p-tcp
              containerPort: 30303
            - name: p2p-udp
              containerPort: 30303
              protocol: UDP
          readinessProbe:
            exec:
              command:
                - /scripts/check-node-sync.sh
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - /scripts/check-node-health.sh
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: data
              mountPath: /root/.ethereum
            - name: health-check-scripts
              mountPath: /scripts
      volumes:
        - name: health-check-scripts
          configMap:
            name: geth-health-check
            defaultMode: 0755  
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}